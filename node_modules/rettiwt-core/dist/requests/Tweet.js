"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.unretweet = exports.unpost = exports.unlike = exports.search = exports.retweeters = exports.retweet = exports.replies = exports.post = exports.likers = exports.like = exports.details = void 0;
var TweetFilter_1 = require("../models/args/TweetFilter");
var Variables_1 = require("../models/params/Variables");
/**
 * @param id - The id of the tweet whose details are to be fetched.
 *
 * @public
 */
function details(id) {
    return {
        method: 'get',
        url: 'https://x.com/i/api/graphql/0hWvDhmW8YQ-S_ib3azIrw/TweetResultByRestId',
        params: {
            /* eslint-disable @typescript-eslint/naming-convention */
            variables: JSON.stringify({
                tweetId: id,
                referrer: 'home',
                with_rux_injections: false,
                includePromotedContent: false,
                withCommunity: false,
                withQuickPromoteEligibilityTweetFields: false,
                withBirdwatchNotes: false,
                withVoice: false,
                withV2Timeline: false,
            }),
            features: JSON.stringify({
                rweb_lists_timeline_redesign_enabled: true,
                responsive_web_graphql_exclude_directive_enabled: true,
                verified_phone_label_enabled: true,
                creator_subscriptions_tweet_preview_api_enabled: true,
                responsive_web_graphql_timeline_navigation_enabled: true,
                responsive_web_graphql_skip_user_profile_image_extensions_enabled: false,
                tweetypie_unmention_optimization_enabled: true,
                responsive_web_edit_tweet_api_enabled: true,
                graphql_is_translatable_rweb_tweet_is_translatable_enabled: true,
                view_counts_everywhere_api_enabled: true,
                longform_notetweets_consumption_enabled: true,
                responsive_web_twitter_article_tweet_consumption_enabled: false,
                tweet_awards_web_tipping_enabled: false,
                freedom_of_speech_not_reach_fetch_enabled: true,
                standardized_nudges_misinfo: true,
                tweet_with_visibility_results_prefer_gql_limited_actions_policy_enabled: true,
                longform_notetweets_rich_text_read_enabled: true,
                longform_notetweets_inline_media_enabled: true,
                responsive_web_media_download_video_enabled: false,
                responsive_web_enhance_cards_enabled: false,
            }),
            /* eslint-enable @typescript-eslint/naming-convention */
        },
        paramsSerializer: { encode: encodeURIComponent },
    };
}
exports.details = details;
/**
 * @param id - The id of the tweet to be liked.
 *
 * @public
 */
function like(id) {
    return {
        method: 'post',
        url: 'https://x.com/i/api/graphql/lI07N6Otwv1PhnEgXILM7A/FavoriteTweet',
        data: {
            /* eslint-disable @typescript-eslint/naming-convention */
            variables: {
                tweet_id: id,
            },
            /* eslint-enable @typescript-eslint/naming-convention */
        },
    };
}
exports.like = like;
/**
 * @param id - The id of the tweet whose likers are to be fetched.
 * @param count - The number of likers to fetch. Only works as a lower limit when used with a cursor.
 * @param cursor - The cursor to the batch of likers to fetch.
 *
 * @public
 */
function likers(id, count, cursor) {
    return {
        method: 'get',
        url: 'https://x.com/i/api/graphql/9XKD3EWWC2BKpIFyDj4KKQ/Favoriters',
        params: {
            /* eslint-disable @typescript-eslint/naming-convention */
            variables: JSON.stringify({
                tweetId: id,
                count: count,
                cursor: cursor,
                includePromotedContent: false,
            }),
            features: JSON.stringify({
                rweb_lists_timeline_redesign_enabled: true,
                responsive_web_graphql_exclude_directive_enabled: true,
                verified_phone_label_enabled: true,
                creator_subscriptions_tweet_preview_api_enabled: true,
                responsive_web_graphql_timeline_navigation_enabled: true,
                responsive_web_graphql_skip_user_profile_image_extensions_enabled: false,
                tweetypie_unmention_optimization_enabled: true,
                responsive_web_edit_tweet_api_enabled: true,
                graphql_is_translatable_rweb_tweet_is_translatable_enabled: true,
                view_counts_everywhere_api_enabled: true,
                longform_notetweets_consumption_enabled: true,
                responsive_web_twitter_article_tweet_consumption_enabled: false,
                tweet_awards_web_tipping_enabled: false,
                freedom_of_speech_not_reach_fetch_enabled: true,
                standardized_nudges_misinfo: true,
                tweet_with_visibility_results_prefer_gql_limited_actions_policy_enabled: true,
                longform_notetweets_rich_text_read_enabled: true,
                longform_notetweets_inline_media_enabled: true,
                responsive_web_media_download_video_enabled: false,
                responsive_web_enhance_cards_enabled: false,
            }),
            /* eslint-enable @typescript-eslint/naming-convention */
        },
        paramsSerializer: { encode: encodeURIComponent },
    };
}
exports.likers = likers;
/**
 * @param args - The configuration object for the tweet to be posted.
 *
 * @public
 */
function post(args) {
    return {
        method: 'post',
        url: 'https://x.com/i/api/graphql/bDE2rBtZb3uyrczSZ_pI9g/CreateTweet',
        data: {
            /* eslint-disable @typescript-eslint/naming-convention */
            variables: {
                tweet_text: args.text,
                dark_request: false,
                attachment_url: args.quote ? "https://x.com/i/status/".concat(args.quote) : undefined,
                media: args.media ? new Variables_1.MediaVariable(args.media) : undefined,
                reply: args.replyTo ? new Variables_1.ReplyVariable(args.replyTo) : undefined,
                semantic_annotation_ids: [],
            },
            features: {
                tweetypie_unmention_optimization_enabled: true,
                responsive_web_edit_tweet_api_enabled: true,
                graphql_is_translatable_rweb_tweet_is_translatable_enabled: true,
                view_counts_everywhere_api_enabled: true,
                longform_notetweets_consumption_enabled: true,
                responsive_web_twitter_article_tweet_consumption_enabled: false,
                tweet_awards_web_tipping_enabled: false,
                longform_notetweets_rich_text_read_enabled: true,
                longform_notetweets_inline_media_enabled: true,
                responsive_web_graphql_exclude_directive_enabled: true,
                verified_phone_label_enabled: true,
                freedom_of_speech_not_reach_fetch_enabled: true,
                standardized_nudges_misinfo: true,
                tweet_with_visibility_results_prefer_gql_limited_actions_policy_enabled: true,
                responsive_web_media_download_video_enabled: false,
                responsive_web_graphql_skip_user_profile_image_extensions_enabled: false,
                responsive_web_graphql_timeline_navigation_enabled: true,
                responsive_web_enhance_cards_enabled: false,
                rweb_video_timestamps_enabled: true,
                c9s_tweet_anatomy_moderator_badge_enabled: true,
            },
            /* eslint-enable @typescript-eslint/naming-convention */
        },
    };
}
exports.post = post;
/**
 * @param id - The id of the tweet whose replies are to be fetched.
 * @param count - The number of replies to fetch. Only works as a lower limit when used with a cursor.
 * @param cursor - The cursor to the batch of replies to fetch.
 *
 * @public
 */
function replies(id, count, cursor) {
    return {
        method: 'get',
        url: 'https://x.com/i/api/graphql/B9_KmbkLhXt6jRwGjJrweg/TweetDetail',
        params: {
            /* eslint-disable @typescript-eslint/naming-convention */
            variables: JSON.stringify({
                focalTweetId: id,
                cursor: count,
                referrer: 'tweet',
                controller_data: cursor,
                with_rux_injections: false,
                includePromotedContent: false,
                withCommunity: true,
                withQuickPromoteEligibilityTweetFields: true,
                withBirdwatchNotes: true,
                withVoice: true,
                withV2Timeline: true,
            }),
            features: JSON.stringify({
                responsive_web_graphql_exclude_directive_enabled: true,
                verified_phone_label_enabled: true,
                creator_subscriptions_tweet_preview_api_enabled: true,
                responsive_web_graphql_timeline_navigation_enabled: true,
                responsive_web_graphql_skip_user_profile_image_extensions_enabled: false,
                c9s_tweet_anatomy_moderator_badge_enabled: true,
                tweetypie_unmention_optimization_enabled: true,
                responsive_web_edit_tweet_api_enabled: true,
                graphql_is_translatable_rweb_tweet_is_translatable_enabled: true,
                view_counts_everywhere_api_enabled: true,
                longform_notetweets_consumption_enabled: true,
                responsive_web_twitter_article_tweet_consumption_enabled: true,
                tweet_awards_web_tipping_enabled: false,
                freedom_of_speech_not_reach_fetch_enabled: true,
                standardized_nudges_misinfo: true,
                tweet_with_visibility_results_prefer_gql_limited_actions_policy_enabled: true,
                rweb_video_timestamps_enabled: true,
                longform_notetweets_rich_text_read_enabled: true,
                longform_notetweets_inline_media_enabled: true,
                responsive_web_media_download_video_enabled: false,
                responsive_web_enhance_cards_enabled: false,
            }),
            /* eslint-enable @typescript-eslint/naming-convention */
        },
        paramsSerializer: { encode: encodeURIComponent },
    };
}
exports.replies = replies;
/**
 * @param id - The id of the tweet which is to be retweeted.
 *
 * @public
 */
function retweet(id) {
    return {
        method: 'post',
        url: 'https://x.com/i/api/graphql/ojPdsZsimiJrUGLR1sjUtA/CreateRetweet',
        data: {
            variables: {
                /* eslint-disable @typescript-eslint/naming-convention */
                tweet_id: id,
                dark_request: false,
                /* eslint-enable @typescript-eslint/naming-convention */
            },
        },
    };
}
exports.retweet = retweet;
/**
 * @param id - The id of the tweet whose retweeters are to be fetched.
 * @param count - The number of retweeters to fetch. Only works as a lower limit when used with a cursor.
 * @param cursor - The cursor to the batch of retweeters to fetch.
 *
 * @public
 */
function retweeters(id, count, cursor) {
    return {
        method: 'get',
        url: 'https://x.com/i/api/graphql/v5h-KLmyl-wqZ8i-a_q73w/Retweeters',
        params: {
            /* eslint-disable @typescript-eslint/naming-convention */
            variables: JSON.stringify({
                tweetId: id,
                count: count,
                cursor: cursor,
                includePromotedContent: false,
            }),
            features: JSON.stringify({
                rweb_lists_timeline_redesign_enabled: true,
                responsive_web_graphql_exclude_directive_enabled: true,
                verified_phone_label_enabled: true,
                creator_subscriptions_tweet_preview_api_enabled: true,
                responsive_web_graphql_timeline_navigation_enabled: true,
                responsive_web_graphql_skip_user_profile_image_extensions_enabled: false,
                tweetypie_unmention_optimization_enabled: true,
                responsive_web_edit_tweet_api_enabled: true,
                graphql_is_translatable_rweb_tweet_is_translatable_enabled: true,
                view_counts_everywhere_api_enabled: true,
                longform_notetweets_consumption_enabled: true,
                responsive_web_twitter_article_tweet_consumption_enabled: false,
                tweet_awards_web_tipping_enabled: false,
                freedom_of_speech_not_reach_fetch_enabled: true,
                standardized_nudges_misinfo: true,
                tweet_with_visibility_results_prefer_gql_limited_actions_policy_enabled: true,
                longform_notetweets_rich_text_read_enabled: true,
                longform_notetweets_inline_media_enabled: true,
                responsive_web_media_download_video_enabled: false,
                responsive_web_enhance_cards_enabled: false,
            }),
            /* eslint-enable @typescript-eslint/naming-convention */
        },
        paramsSerializer: { encode: encodeURIComponent },
    };
}
exports.retweeters = retweeters;
/**
 * @param filter - The filter to use for searching tweets.
 * @param count - The number of tweets to fetch. Only works as a lower limit when used with a cursor.
 * @param cursor - The cursor to the batch of tweets to fetch.
 *
 * @public
 */
function search(filter, count, cursor) {
    return {
        method: 'get',
        url: 'https://x.com/i/api/graphql/nK1dw4oV3k4w5TdtcAdSww/SearchTimeline',
        params: {
            /* eslint-disable @typescript-eslint/naming-convention */
            variables: JSON.stringify({
                rawQuery: new TweetFilter_1.TweetFilter(filter).toString(),
                count: count,
                cursor: cursor,
                querySource: 'typed_query',
                product: 'Latest',
            }),
            features: JSON.stringify({
                rweb_lists_timeline_redesign_enabled: true,
                responsive_web_graphql_exclude_directive_enabled: true,
                verified_phone_label_enabled: true,
                creator_subscriptions_tweet_preview_api_enabled: true,
                responsive_web_graphql_timeline_navigation_enabled: true,
                responsive_web_graphql_skip_user_profile_image_extensions_enabled: false,
                tweetypie_unmention_optimization_enabled: true,
                responsive_web_edit_tweet_api_enabled: true,
                graphql_is_translatable_rweb_tweet_is_translatable_enabled: true,
                view_counts_everywhere_api_enabled: true,
                longform_notetweets_consumption_enabled: true,
                responsive_web_twitter_article_tweet_consumption_enabled: false,
                tweet_awards_web_tipping_enabled: false,
                freedom_of_speech_not_reach_fetch_enabled: true,
                standardized_nudges_misinfo: true,
                tweet_with_visibility_results_prefer_gql_limited_actions_policy_enabled: true,
                longform_notetweets_rich_text_read_enabled: true,
                longform_notetweets_inline_media_enabled: true,
                responsive_web_media_download_video_enabled: false,
                responsive_web_enhance_cards_enabled: false,
            }),
            /* eslint-enable @typescript-eslint/naming-convention */
        },
        paramsSerializer: { encode: encodeURIComponent },
    };
}
exports.search = search;
/**
 * @param id - The id of the tweet to be unliked.
 *
 * @public
 */
function unlike(id) {
    return {
        method: 'post',
        url: 'https://x.com/i/api/graphql/ZYKSe-w7KEslx3JhSIk5LA/UnfavoriteTweet',
        data: {
            /* eslint-disable @typescript-eslint/naming-convention */
            variables: {
                tweet_id: id,
            },
            /* eslint-enable @typescript-eslint/naming-convention */
        },
    };
}
exports.unlike = unlike;
/**
 * @param id - The id of the tweet to be unposted.
 *
 * @public
 */
function unpost(id) {
    return {
        method: 'post',
        url: 'https://x.com/i/api/graphql/VaenaVgh5q5ih7kvyVjgtg/DeleteTweet',
        data: {
            /* eslint-disable @typescript-eslint/naming-convention */
            variables: {
                tweet_id: id,
            },
            /* eslint-enable @typescript-eslint/naming-convention */
        },
    };
}
exports.unpost = unpost;
/**
 * @param id - The id of the source tweet (which was retweeted), to be unretweeted.
 *
 * @public
 */
function unretweet(id) {
    return {
        method: 'post',
        url: 'https://x.com/i/api/graphql/iQtK4dl5hBmXewYZuEOKVw/DeleteRetweet',
        data: {
            /* eslint-disable @typescript-eslint/naming-convention */
            variables: {
                source_tweet_id: id,
            },
            /* eslint-enable @typescript-eslint/naming-convention */
        },
    };
}
exports.unretweet = unretweet;
//# sourceMappingURL=Tweet.js.map